//
// Geo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Geo: Codable, JSONEncodable {

    public enum ModelType: String, Codable, CaseIterable {
        case feature = "Feature"
    }
    public var bbox: [Double]
    public var geometry: Point?
    public var properties: AnyCodable
    public var type: ModelType

    public init(bbox: [Double], geometry: Point? = nil, properties: AnyCodable, type: ModelType) {
        self.bbox = bbox
        self.geometry = geometry
        self.properties = properties
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bbox
        case geometry
        case properties
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bbox, forKey: .bbox)
        try container.encodeIfPresent(geometry, forKey: .geometry)
        try container.encode(properties, forKey: .properties)
        try container.encode(type, forKey: .type)
    }
}

