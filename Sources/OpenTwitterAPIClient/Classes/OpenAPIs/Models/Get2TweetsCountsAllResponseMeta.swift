//
// Get2TweetsCountsAllResponseMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Get2TweetsCountsAllResponseMeta: Codable, JSONEncodable, Hashable {

    /** The newest id in this response. */
    public var newestId: String?
    /** The next token. */
    public var nextToken: String?
    /** The oldest id in this response. */
    public var oldestId: String?
    /** The sum of results returned in this response. */
    public var totalTweetCount: Int?

    public init(newestId: String? = nil, nextToken: String? = nil, oldestId: String? = nil, totalTweetCount: Int? = nil) {
        self.newestId = newestId
        self.nextToken = nextToken
        self.oldestId = oldestId
        self.totalTweetCount = totalTweetCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case newestId = "newest_id"
        case nextToken = "next_token"
        case oldestId = "oldest_id"
        case totalTweetCount = "total_tweet_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(newestId, forKey: .newestId)
        try container.encodeIfPresent(nextToken, forKey: .nextToken)
        try container.encodeIfPresent(oldestId, forKey: .oldestId)
        try container.encodeIfPresent(totalTweetCount, forKey: .totalTweetCount)
    }
}

