//
// TweetSearchResponseMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TweetSearchResponseMeta: Codable {

    /** Most recent Tweet Id returned by search query */
    public var newestId: String?
    /** Oldest Tweet Id returned by search query */
    public var oldestId: String?
    /** This value is used to get the next 'page' of results by providing it to the next_token parameter. */
    public var nextToken: String?
    /** Number of search query results */
    public var resultCount: Int?

    public init(newestId: String? = nil, oldestId: String? = nil, nextToken: String? = nil, resultCount: Int? = nil) {
        self.newestId = newestId
        self.oldestId = oldestId
        self.nextToken = nextToken
        self.resultCount = resultCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case newestId = "newest_id"
        case oldestId = "oldest_id"
        case nextToken = "next_token"
        case resultCount = "result_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(newestId, forKey: .newestId)
        try container.encodeIfPresent(oldestId, forKey: .oldestId)
        try container.encodeIfPresent(nextToken, forKey: .nextToken)
        try container.encodeIfPresent(resultCount, forKey: .resultCount)
    }
}

