//
// Media.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public enum Media: Codable {
    case typeAnimatedGif(AnimatedGif)
    case typePhoto(Photo)
    case typeVideo(Video)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeAnimatedGif(let value):
            try container.encode(value)
        case .typePhoto(let value):
            try container.encode(value)
        case .typeVideo(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(AnimatedGif.self) {
            self = .typeAnimatedGif(value)
        } else if let value = try? container.decode(Photo.self) {
            self = .typePhoto(value)
        } else if let value = try? container.decode(Video.self) {
            self = .typeVideo(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of Media"))
        }
    }
}

