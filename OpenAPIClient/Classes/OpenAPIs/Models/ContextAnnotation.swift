//
// ContextAnnotation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Annotation inferred from the tweet text. */
public struct ContextAnnotation: Codable {

    public var domain: ContextAnnotationDomainFields
    public var entity: ContextAnnotationEntityFields

    public init(domain: ContextAnnotationDomainFields, entity: ContextAnnotationEntityFields) {
        self.domain = domain
        self.entity = entity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case domain
        case entity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(domain, forKey: .domain)
        try container.encode(entity, forKey: .entity)
    }
}

