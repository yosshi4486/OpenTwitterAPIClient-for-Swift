//
// MentionEntity.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MentionEntity: Codable {

    /** Index (zero-based) at which position this entity starts.  The index is inclusive. */
    public var start: Int
    /** Index (zero-based) at which position this entity ends.  The index is exclusive. */
    public var end: Int
    /** The Twitter handle (screen name) of this user. */
    public var username: String
    /** Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers. */
    public var id: String

    public init(start: Int, end: Int, username: String, id: String) {
        self.start = start
        self.end = end
        self.username = username
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case start
        case end
        case username
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(start, forKey: .start)
        try container.encode(end, forKey: .end)
        try container.encode(username, forKey: .username)
        try container.encode(id, forKey: .id)
    }
}

