//
// GeneralAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GeneralAPI {

    /**
     Returns the open api spec document.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyCodable
     */
    @available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
    open class func getOpenApiSpec(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue) async throws -> AnyCodable {
        return try await withCheckedThrowingContinuation { continuation in
            getOpenApiSpecWithRequestBuilder().execute(apiResponseQueue) { result in
                switch result {
                case let .success(response):
                    continuation.resume(returning: response.body!)
                case let .failure(error):
                    continuation.resume(throwing: error)
                }
            }
        }
    }

    /**
     Returns the open api spec document.
     - GET /2/openapi.json
     - Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getOpenApiSpecWithRequestBuilder() -> RequestBuilder<AnyCodable> {
        let localVariablePath = "/2/openapi.json"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
